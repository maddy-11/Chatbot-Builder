# Generated by Django 5.0.7 on 2024-08-01 11:43

import botbuilder.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('customization', models.JSONField(blank=True, default=botbuilder.models.get_default_customization, null=True)),
                ('description', models.TextField(null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='chatbot_logos/')),
                ('custom_url', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('allow_prompts', models.BooleanField(default=True)),
                ('prompts', models.JSONField(blank=True, default=botbuilder.models.get_default_prompts, null=True)),
                ('welcome_message', models.CharField(blank=True, default='ðŸ‘‹ Hi, how can I help you?', max_length=255, null=True)),
                ('creativity', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('prompt_template', models.TextField(blank=True, default="\n        Your main goal is to provide answers as accurately as possible, based on the instructions and Knowledge Base you have been given.\n        If a question does not match the provided Knowledge Base or chat history, do not answer it and courteously ask the user to ask questions within the context.\n        Use the following pieces of information to answer the user's question.\n        If you don't know the answer, just say that you don't know, don't try to make up an answer.\n        ", null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_chatbots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('chat_history', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('chatbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botbuilder.chatbot')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_path', models.CharField(blank=True, max_length=255, null=True)),
                ('files', models.JSONField(blank=True, default=dict, null=True)),
                ('urls', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, null=True)),
                ('chatbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botbuilder.chatbot')),
            ],
        ),
    ]
